definitions:
  models.User:
    properties:
      email:
        type: string
      id:
        type: integer
      password:
        items:
          type: integer
        type: array
      phoneNumber:
        type: string
      username:
        type: string
    required:
    - email
    - password
    - phoneNumber
    - username
    type: object
  validators.LoginInput:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  validators.RegisterInput:
    properties:
      email:
        type: string
      password:
        minLength: 6
        type: string
      phoneNumber:
        type: string
      username:
        type: string
    required:
    - email
    - password
    - phoneNumber
    - username
    type: object
info:
  contact: {}
  description: This is a sample server celler server.
  termsOfService: http://swagger.io/terms/
  title: Swagger Example API
  version: "1.0"
paths:
  /api/login:
    post:
      consumes:
      - application/json
      description: Log in a user with the provided credentials
      parameters:
      - description: User login details
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/validators.LoginInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Log in a user
      tags:
      - auth
  /api/logout:
    post:
      description: Log out the authenticated user by clearing the JWT cookie
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Log out the authenticated user
      tags:
      - auth
  /api/register:
    post:
      consumes:
      - application/json
      description: Register a new user with the provided details
      parameters:
      - description: User registration details
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/validators.RegisterInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Register a new user
      tags:
      - auth
  /api/user:
    get:
      description: Get the authenticated user based on the JWT token
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      summary: Get the authenticated user
      tags:
      - user
swagger: "2.0"
